QUOTE SCRAPING PROJECT

TO DOs
Scraping part
-------------------------------
#Request all quote pages and scrape quotes and author's name
#Request all authors pages and scrape author's name, place of birth and birthday

STEPS TO SCRAPE QUOTES
#Use scrapy tool to get quotes and author's info then save quote in a sqlite database

Game Part 
#Users are allowed to guess 4 time the name of the person who made the quotes
#For each failed guess, user's are given tips
- Birthdate and location of author
- The first letter of author first name
- The first letter of author last name

APPROACH
Object Oriented Programming

DB MODULE 
- Write methods to extract sqlite3 execute methods arguments to be able to use it in a transaction.
# The two methods are called query and query_many
 - query method process the arguments to send to the connection manager to call the python sqlite3 execute method
 - query_many method process the arguments to send to the connection manager to call the execute_many method.

- Write a method called conn_manager to take the extracted arguments from the query and query many methods. This method will be the connection manager, depending on the query or query_many method it calls the execute or execute_many method of python sqlite3 method using the arguments from gotten from the methods. 
    The purpose of this method is to automatically open a connection to the database, execute the queries , automatically commits the transaction, returns the transaction data or None(if no data is gotten) and closed the connection after every transaction.

GAME MODULE
- Have a list of row numbers(1 - 100) i.e number of quotes in database
- Have a author variable that hold author's information
- Write a method that gets a random number fromthe list of row numbers and deletes the number from the list
- Use the number to query the database where scraped data is saved, it gets a quote using where the rowid is the number
- After getting the quote data, extract the author's name from the data tuple and use the name to query the database for the author's information
-  Using the author data create 3 different hints, the place and date of birth, the first letter of first name and first letter of last name
- Create a method that give hints, the method checks if the player guess is correct. if it is not it returns a hint for every failed guess else return a congratulatory message for the player.  after that call a method to ask if the player wants to play again and if yes call the play method to start a again

NB: To make sure the player doesn't have to guess the full name to be right, seperate the author's full name using white space into a set and do the same with the player's guess so that way you can check if the guess set is a subset of the full name set. This method also helps to make a proper check that the player guess at least the first or last name correctly

